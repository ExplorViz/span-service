plugins {
  id 'java'
  id 'io.quarkus'
  id 'com.adarshr.test-logger' version '3.2.0'
}

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url "https://packages.confluent.io/maven/"
  }
}

dependencies {
  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

  // Needed for @Scheduled annotations
  implementation 'io.quarkus:quarkus-scheduler'

  // Quarkus Cassandra Platform + DataStax Cassandra Driver
  implementation enforcedPlatform("${quarkusPlatformGroupId}:quarkus-cassandra-bom:${quarkusPlatformVersion}")
  implementation 'com.datastax.oss.quarkus:cassandra-quarkus-client'

  // Kafka Streams + Confluent Schema Registry + Avro (de)serializer
  implementation 'io.quarkus:quarkus-kafka-streams'
  implementation 'io.quarkus:quarkus-confluent-registry-avro'
  implementation group: 'io.confluent', name: 'kafka-streams-avro-serde', version: "${confluentAvroSerdeVersion}"

  // REST implementation (Jackson serialization) + MicroProfile OpenAPI specification
  implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
  implementation 'io.quarkus:quarkus-smallrye-openapi'
}

group 'net.explorviz'
version '1.0-SNAPSHOT'

compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << '-parameters'
}

compileTestJava {
  options.encoding = 'UTF-8'
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
  // Turn on all javac warnings except classfile and processing, which produces many false-positives about annotations
  options.compilerArgs << "-Xlint:all" << "-Xlint:-classfile" << "-Xlint:-processing"
}

test {
  systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
