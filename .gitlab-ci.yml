default:
  tags:
    - exec-docker
  image: ghcr.io/graalvm/graalvm-community:21
  cache: # Cache modules in between jobs
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .gradle
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

stages:
  - build
  - code-analysis
  - test
  - publish

build:
  stage: build
  script: ./gradlew assemble
  artifacts:
    paths:
      - build

pmd:
  stage: code-analysis
  script: ./gradlew pmdMain
  artifacts:
    paths:
      - build

checkstyle:
  stage: code-analysis
  script: ./gradlew checkstyleMain
  artifacts:
    paths:
      - build

unit-test:
  stage: test
  script:
    - ./gradlew test
  artifacts:
    paths:
      - build

integration-test:
  stage: test
  script:
    - ./gradlew integrationTest
  allow_failure: true
  artifacts:
    paths:
      - build

.push-dockerhub-native-base-job:
  stage: publish
  allow_failure: true
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - ./gradlew clean assemble -Dquarkus.package.type=native -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.name=span-service-native -Dquarkus.container-image.additional-tags=$CI_COMMIT_SHORT_SHA -Dquarkus.native.additional-build-args="--initialize-at-run-time=org.apache.kafka.common.security.authenticator.SaslClientAuthenticator\\,org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin" -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD
  after_script:
    - echo "Image was uploaded to Dockerhub; explorviz/span-service-native:latest and explorviz/span-service-native:$CI_COMMIT_SHORT_SHA"

push-dockerhub-native-main:
  extends: .push-dockerhub-native-base-job

push-dockerhub-native-mr:
  stage: publish
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - ./gradlew clean assemble -Dquarkus.package.type=native -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.name=span-service-native -Dquarkus.container-image.tag=$CI_MERGE_REQUEST_ID-$CI_COMMIT_SHORT_SHA -Dquarkus.native.additional-build-args="--initialize-at-run-time=org.apache.kafka.common.security.authenticator.SaslClientAuthenticator\\,org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin" -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD
  after_script:
    - echo "Image was uploaded to Dockerhub; explorviz/span-service-native:$CI_MERGE_REQUEST_ID-$CI_COMMIT_SHORT_SHA"

.push-dockerhub-base-job:
  stage: publish
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - ./gradlew clean assemble -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.additional-tags=$CI_COMMIT_SHORT_SHA -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD
  after_script:
    - echo "Image was uploaded to Dockerhub; explorviz/span-service-jvm:latest and explorviz/span-service-jvm:$CI_COMMIT_SHORT_SHA"

push-dockerhub-main:
  extends: .push-dockerhub-base-job

push-dockerhub-mr:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - ./gradlew clean assemble -Dquarkus.container-image.build=true -Dquarkus.container-image.push=true -Dquarkus.container-image.tag=$CI_MERGE_REQUEST_ID-$CI_COMMIT_SHORT_SHA -Dquarkus.container-image.username=$EXPLORVIZ_DOCKERHUB_USERNAME -Dquarkus.container-image.password=$EXPLORVIZ_DOCKERHUB_PASSWORD
  after_script:
    - echo "Image was uploaded to Dockerhub; explorviz/span-service-jvm:$CI_MERGE_REQUEST_ID-$CI_COMMIT_SHORT_SHA"
